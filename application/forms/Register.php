<?php

/**
 * Created by PhpStorm.
 * User: professor-taha
 * Date: 4/30/16
 * Time: 8:32 PM
 */
class Application_Form_Register extends Application_Form_Abstract
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->addElementPrefixPath(
            'Application_Validate',
            APPLICATION_PATH . '/models/validate/',
            'validate'
        );
        $element = $this->createElement('text', 'fname', array(
            'label' => "First name",
            'required' => true,
			'filters' => ['StringTrim'],
            'validators' => ['alpha', array('StringLength', true, array(3, 128))]
        ));
        $this->addElement($element);
        $element = $this->createElement('text', 'lname', array(
            'label' => "Last name",
            'required' => true,
			'filters' => ['StringTrim'], 
            'validators' => ['alpha', array('StringLength', true, array(3, 128)) ]
        ));
        $this->addElement($element);
        $element = $this->createElement('text', 'schoolname', array(
            'label' => "School's name",
            'required' => false,
			'filters' => ['StringTrim'],
            'validators' => ['alpha',
            ['StringLength', true, [3,128]]]
        ));
        $this->addElement($element);
        $element = $this->createElement('text', 'schooladdress', array(
        'label' => "School's Address",
        'required' => false,
		'filters' => ['StringTrim']
    ));

        $this->addElement($element);
        $element = $this->createElement('select', 'island', array(
        'label' => "Island",
        'required' => true,
        'multiOptions' => [ 'oahu' => "Oahu", 'hawaii' => 'Hawai`i', 'maui' => 'Maui','kauai' => 'Kauai' , 'molokai'=>'Mokokai', 'lanai' => 'Lanai'],
    ));
        $this->addElement($element);
        $element = $this->createElement('text', 'email', array(
            'label' => "Teacher's email address",
            'required' => true,
            'validators' => ['EmailAddress', ['UniqueEmail', false, Application_Model_User::getInstance()]],
			'filters' => ['StringTrim', 'StringToLower'] 

        ));
        $this->addElement($element);
        $element = $this->createElement('password', 'password', array(
            'label' => "Temporary Password",
            'required' => true,
        ));
        $this->addElement($element);
        $element = $this->createElement('password', 'passwordrep', array(
            'label' => "Confirm password",
            'required' => true,
			'validators' => ['PasswordVerification']
        ));
        $this->addElement($element);
        $element = $this->createElement('submit', 'submit', array(
            'label' => "Register User",
            'required' => true,
        ));
        $this->addElement($element);
        $this -> addDecorator('formElements');
        $this -> addDecorator('htmlTag');
        $this -> addDecorator('formErrors');
        $this -> addDecorator('form');
        $this -> getDecorator('formErrors') -> setOption('placement','PREPEND');
        $this -> setAction('/User/register');
        $this -> setMethod('post');
    }

}